---
- name: WSL test program
  hosts: '172.16.13.58'
  vars_files: 
    - vault_become_password.yml

  tasks:
    - name: Self ping
      ansible.builtin.ping:
      register: ping_log

    - name: Check ping status
      ansible.builtin.debug:
        msg: "{{ ping_log }}"

    - name: Check ping status 1"
      when: ping_log.ping != 'pong'
      ansible.builtin.debug:
        msg: Ping failed~!

    - name: Check ping status 2
      when: not ping_log.failed
      ansible.builtin.debug:
        msg: Ping success~!

    - name: Get row count
      ibm.power_ibmi.ibmi_sql_execute:
        sql: "SELECT COUNT(*) FROM steve.dmgobj"
        become_user: 'IBMECS'
        become_user_password: "{{ vault_ibmecs_become_password }}"
      register: row_count_result

    - name: SQL insert (maximum 1000 iterations or until count exceeds 1000)
      ibm.power_ibmi.ibmi_sql_execute:
        sql: "{{ item }}"
        become_user: 'IBMECS'
        become_user_password: "{{ vault_ibmecs_become_password }}"
      loop: "{{ sql_statements * 500 }}"
      vars:
        sql_statements:
          - "insert into steve.dmgobj values('1','STEVE1','DMGOBJ1','*FILE','')"
          - "insert into steve.dmgobj values('2','STEVE2','DMGOBJ2','*FILE','')"
          - "insert into steve.dmgobj values('3','STEVE3','DMGOBJ3','*FILE','')"
        row_count: "{{ row_count_result }}"
      until: row_count >= 1000
      retries: 500  # Maximum number of retries
      delay: 1      # Delay between retries (in seconds)
      when: row_count < 1000
    
    - set_fact:
        row_count: "{{ result.results[0].COUNT }}"
    
    - debug:
        msg: "Total rows in steve.dmgobj: {{ row_count }}"